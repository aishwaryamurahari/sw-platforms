version: 2.1

# Define reusable commands
commands:
  docker-build-push:
    parameters:
      dockerfile:
        type: string
      image_name:
        type: string
    steps:
      - run:
          name: Build and Push Docker image
          command: |
            docker build -t $DOCKER_USERNAME/<< parameters.image_name >>:${CIRCLE_SHA1} -f << parameters.dockerfile >> .
            docker tag $DOCKER_USERNAME/<< parameters.image_name >>:${CIRCLE_SHA1} $DOCKER_USERNAME/<< parameters.image_name >>:latest
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push $DOCKER_USERNAME/<< parameters.image_name >>:${CIRCLE_SHA1}
            docker push $DOCKER_USERNAME/<< parameters.image_name >>:latest

jobs:
  frontend-build:
    docker:
      - image: circleci/node:14
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - frontend-dependencies-{{ checksum "chat-app/chat-frontend/package.json" }}
            - frontend-dependencies-
      - run:
          name: Install Frontend Dependencies
          command: cd chat-app/chat-frontend && npm install
      - save_cache:
          paths:
            - chat-app/chat-frontend/node_modules
          key: frontend-dependencies-{{ checksum "chat-app/chat-frontend/package.json" }}
      - run:
          name: Run Frontend Tests
          command: cd chat-app/chat-frontend && npm test
      - run:
          name: Build Frontend
          command: cd chat-app/chat-frontend && npm run build
      - persist_to_workspace:
          root: .
          paths:
            - chat-app/chat-frontend/build
            - chat-app/chat-frontend/Dockerfile

  backend-build:
    docker:
      - image: cimg/openjdk:17.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - backend-dependencies-{{ checksum "chat-app/chat-backend/pom.xml" }}
            - backend-dependencies-
      - run:
          name: Install Backend Dependencies
          command: cd chat-app/chat-backend && mvn install -DskipTests
      - save_cache:
          paths:
            - ~/.m2
          key: backend-dependencies-{{ checksum "chat-app/chat-backend/pom.xml" }}
      - run:
          name: Run Backend Tests
          command: cd chat-app/chat-backend && mvn test
      - run:
          name: Build Backend
          command: cd chat-app/chat-backend && mvn package
      - persist_to_workspace:
          root: .
          paths:
            - chat-app/chat-backend/target
            - chat-app/chat-backend/Dockerfile

  deploy:
    docker:
      - image: cimg/kubectl:1.24
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/repo
      - docker-build-push:
          dockerfile: chat-app/chat-frontend/Dockerfile
          image_name: chat-frontend
      - docker-build-push:
          dockerfile: chat-app/chat-backend/Dockerfile
          image_name: chat-backend
      - run:
          name: Install kubectl and configure
          command: |
            echo $KUBE_CONFIG | base64 -d > kubeconfig.yaml
            export KUBECONFIG=kubeconfig.yaml
      - run:
          name: Deploy to Kubernetes
          command: |
            # Update deployments with new image versions
            kubectl set image deployment/chat-frontend \
              frontend=$DOCKER_USERNAME/chat-frontend:${CIRCLE_SHA1} --record
            
            kubectl set image deployment/chat-backend \
              backend=$DOCKER_USERNAME/chat-backend:${CIRCLE_SHA1} --record
            
            # Wait for rollout to complete
            kubectl rollout status deployment/chat-frontend
            kubectl rollout status deployment/chat-backend

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - frontend-build
      - backend-build
      - deploy:
          requires:
            - frontend-build
            - backend-build
          filters:
            branches:
              only: devops_assignment